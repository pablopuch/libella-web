---
interface AccordionItem {
    question: string;
    answer: string;
}

interface Props {
    items: AccordionItem[];
}

const { items } = Astro.props;
---

<div class="my-32">
    {
        items.map((item, index) => (
            <div>
                <h2 id={`accordion-flush-heading-${index + 1}`}>
                    <button
                        type="button"
                        class="flex items-center justify-between w-full py-5 rtl:text-right border-b dark:border-gray-700 gap-3"
                        data-accordion-target={`#accordion-flush-body-${index + 1}`}
                        aria-expanded="false"
                    >
                        <span>{item.question}</span>
                        <svg
                            data-accordion-icon
                            class="w-3 h-3 rotate-180 shrink-0"
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 10 6"
                        >
                            <path
                                stroke="currentColor"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M9 5 5 1 1 5"
                            />
                        </svg>
                    </button>
                </h2>
                <div
                    id={`accordion-flush-body-${index + 1}`}
                    class="hidden"
                    aria-labelledby={`accordion-flush-heading-${index + 1}`}
                >
                    <div class="py-5 border-b dark:border-gray-700">
                        {item.answer.split("\n").map((line) => (
                            <p>{line}</p>
                        ))}
                    </div>
                </div>
            </div>
        ))
    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const accordions = document.querySelectorAll("[data-accordion-target]");
        accordions.forEach((button) => {
            button.addEventListener("click", function () {
                const targetId = this.getAttribute("data-accordion-target");
                const targetElement = document.querySelector(targetId);
                const expanded = this.getAttribute("aria-expanded") === "true";

                // Toggle aria-expanded attribute
                this.setAttribute("aria-expanded", !expanded);

                // Toggle the hidden class
                if (!expanded) {
                    targetElement.classList.remove("hidden");
                    targetElement.classList.add("block");
                    button.classList.add("font-medium");
                } else {
                    targetElement.classList.add("hidden");
                    targetElement.classList.remove("block");
                    button.classList.remove("font-medium");
                }

                // Rotate the icon
                const icon = this.querySelector("[data-accordion-icon]");
                if (icon) {
                    icon.classList.toggle("rotate-180");
                }
            });
        });
    });
</script>
